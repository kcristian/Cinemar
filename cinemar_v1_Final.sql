-- MySQL Script generated by MySQL Workbench
-- Sun Jul 10 20:09:34 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema cinemar_v1
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `cinemar_v1` ;

-- -----------------------------------------------------
-- Schema cinemar_v1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cinemar_v1` DEFAULT CHARACTER SET utf8 ;
USE `cinemar_v1` ;

-- -----------------------------------------------------
-- Table `cinemar_v1`.`actores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`actores` (
  `id_actor` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(25) NOT NULL,
  `apellido` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id_actor`))
ENGINE = InnoDB
AUTO_INCREMENT = 20
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`reparto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`reparto` (
  `id_reparto` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`id_reparto`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`actor_en_reparto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`actor_en_reparto` (
  `id_actor` INT NULL DEFAULT NULL,
  `id_reparto` INT NULL DEFAULT NULL,
  CONSTRAINT `actor_en_reparto_ibfk_1`
    FOREIGN KEY (`id_actor`)
    REFERENCES `cinemar_v1`.`actores` (`id_actor`),
  CONSTRAINT `actor_en_reparto_ibfk_2`
    FOREIGN KEY (`id_reparto`)
    REFERENCES `cinemar_v1`.`reparto` (`id_reparto`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `id_actor` ON `cinemar_v1`.`actor_en_reparto` (`id_actor` ASC) VISIBLE;

CREATE INDEX `id_reparto` ON `cinemar_v1`.`actor_en_reparto` (`id_reparto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`salas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`salas` (
  `id_sala` INT NOT NULL,
  `capacidad` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id_sala`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`butacas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`butacas` (
  `id_butaca` INT NOT NULL,
  `identificador` VARCHAR(5) NULL DEFAULT NULL,
  `estado` TINYINT NULL DEFAULT '0',
  `salas_id_sala` INT NOT NULL,
  PRIMARY KEY (`id_butaca`, `salas_id_sala`),
  CONSTRAINT `fk_butacas_salas1`
    FOREIGN KEY (`salas_id_sala`)
    REFERENCES `cinemar_v1`.`salas` (`id_sala`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `id_butaca` ON `cinemar_v1`.`butacas` (`id_butaca` ASC) VISIBLE;

CREATE UNIQUE INDEX `identificador` ON `cinemar_v1`.`butacas` (`identificador` ASC) VISIBLE;

CREATE INDEX `fk_butacas_salas1_idx` ON `cinemar_v1`.`butacas` (`salas_id_sala` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`peliculas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`peliculas` (
  `id_pelicula` INT NOT NULL,
  `nombre` VARCHAR(45) NULL DEFAULT NULL,
  `sinopsis` VARCHAR(100) NULL DEFAULT NULL,
  `duracion` INT NOT NULL,
  `director` VARCHAR(45) NULL DEFAULT NULL,
  `reparto` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id_pelicula`),
  CONSTRAINT `peliculas_ibfk_1`
    FOREIGN KEY (`reparto`)
    REFERENCES `cinemar_v1`.`reparto` (`id_reparto`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `reparto` ON `cinemar_v1`.`peliculas` (`reparto` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`clasificacion_peliculas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`clasificacion_peliculas` (
  `id_clasificacion` INT NOT NULL,
  `identificador` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NULL DEFAULT NULL,
  `peliculas_id_pelicula` INT NOT NULL,
  PRIMARY KEY (`id_clasificacion`, `peliculas_id_pelicula`),
  CONSTRAINT `fk_clasificacion_peliculas_peliculas1`
    FOREIGN KEY (`peliculas_id_pelicula`)
    REFERENCES `cinemar_v1`.`peliculas` (`id_pelicula`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_clasificacion_peliculas_peliculas1_idx` ON `cinemar_v1`.`clasificacion_peliculas` (`peliculas_id_pelicula` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`descuentos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`descuentos` (
  `id_descuento` INT NOT NULL,
  `dia` VARCHAR(45) NULL DEFAULT NULL,
  `descuento` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`id_descuento`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`formato_salas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`formato_salas` (
  `id_formato` INT NOT NULL,
  `identificador` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NULL DEFAULT NULL,
  `precio` FLOAT NOT NULL,
  PRIMARY KEY (`id_formato`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`funciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`funciones` (
  `id_funcion` INT NOT NULL,
  `fecha` DATE NULL DEFAULT NULL,
  `salas_id_sala` INT NOT NULL,
  `peliculas_id_pelicula` INT NOT NULL,
  PRIMARY KEY (`id_funcion`, `salas_id_sala`, `peliculas_id_pelicula`),
  CONSTRAINT `fk_funciones_peliculas1`
    FOREIGN KEY (`peliculas_id_pelicula`)
    REFERENCES `cinemar_v1`.`peliculas` (`id_pelicula`),
  CONSTRAINT `fk_funciones_salas1`
    FOREIGN KEY (`salas_id_sala`)
    REFERENCES `cinemar_v1`.`salas` (`id_sala`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `id_funcion` ON `cinemar_v1`.`funciones` (`id_funcion` ASC) VISIBLE;

CREATE INDEX `fk_funciones_salas1_idx` ON `cinemar_v1`.`funciones` (`salas_id_sala` ASC) VISIBLE;

CREATE INDEX `fk_funciones_peliculas1_idx` ON `cinemar_v1`.`funciones` (`peliculas_id_pelicula` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`genero_peliculas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`genero_peliculas` (
  `id_genero_pelicula` INT NOT NULL,
  `nombre` VARCHAR(45) NULL DEFAULT NULL,
  `peliculas_id_pelicula` INT NOT NULL,
  PRIMARY KEY (`id_genero_pelicula`, `peliculas_id_pelicula`),
  CONSTRAINT `fk_genero_peliculas_peliculas1`
    FOREIGN KEY (`peliculas_id_pelicula`)
    REFERENCES `cinemar_v1`.`peliculas` (`id_pelicula`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_genero_peliculas_peliculas1_idx` ON `cinemar_v1`.`genero_peliculas` (`peliculas_id_pelicula` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`usuarios` (
  `id_usuario` INT NOT NULL,
  `rol` ENUM('CLIENTE', 'ADMINISTRACION') NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NOT NULL,
  `telefono` VARCHAR(45) NOT NULL,
  `fecha_registro` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`reservas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`reservas` (
  `id_reserva` INT NOT NULL,
  `fecha` DATE NOT NULL,
  `cantidad` INT NULL DEFAULT '1',
  `descuento` INT NULL DEFAULT NULL,
  `usuarios_id_usuario` INT NOT NULL,
  `funciones_id_funcion` INT NOT NULL,
  `funciones_salas_id_sala` INT NOT NULL,
  `funciones_peliculas_id_pelicula` INT NOT NULL,
  PRIMARY KEY (`id_reserva`, `usuarios_id_usuario`, `funciones_id_funcion`, `funciones_salas_id_sala`, `funciones_peliculas_id_pelicula`),
  CONSTRAINT `fk_reservas_descuentos`
    FOREIGN KEY (`descuento`)
    REFERENCES `cinemar_v1`.`descuentos` (`id_descuento`),
  CONSTRAINT `fk_reservas_funciones1`
    FOREIGN KEY (`funciones_id_funcion` , `funciones_salas_id_sala` , `funciones_peliculas_id_pelicula`)
    REFERENCES `cinemar_v1`.`funciones` (`id_funcion` , `salas_id_sala` , `peliculas_id_pelicula`),
  CONSTRAINT `fk_reservas_usuarios1`
    FOREIGN KEY (`usuarios_id_usuario`)
    REFERENCES `cinemar_v1`.`usuarios` (`id_usuario`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_reservas_usuarios1_idx` ON `cinemar_v1`.`reservas` (`usuarios_id_usuario` ASC) VISIBLE;

CREATE INDEX `fk_reservas_funciones1_idx` ON `cinemar_v1`.`reservas` (`funciones_id_funcion` ASC, `funciones_salas_id_sala` ASC, `funciones_peliculas_id_pelicula` ASC) VISIBLE;

CREATE INDEX `fk_reservas_descuentos` ON `cinemar_v1`.`reservas` (`descuento` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`salas_tienen_formato_salas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`salas_tienen_formato_salas` (
  `salas_id_sala` INT NOT NULL,
  `formato_salas_id_formato` INT NOT NULL,
  PRIMARY KEY (`salas_id_sala`, `formato_salas_id_formato`),
  CONSTRAINT `fk_salas_has_formato_salas_formato_salas1`
    FOREIGN KEY (`formato_salas_id_formato`)
    REFERENCES `cinemar_v1`.`formato_salas` (`id_formato`),
  CONSTRAINT `fk_salas_has_formato_salas_salas1`
    FOREIGN KEY (`salas_id_sala`)
    REFERENCES `cinemar_v1`.`salas` (`id_sala`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_salas_has_formato_salas_formato_salas1_idx` ON `cinemar_v1`.`salas_tienen_formato_salas` (`formato_salas_id_formato` ASC) VISIBLE;

CREATE INDEX `fk_salas_has_formato_salas_salas1_idx` ON `cinemar_v1`.`salas_tienen_formato_salas` (`salas_id_sala` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cinemar_v1`.`tipo_peliculas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`tipo_peliculas` (
  `id_tipo` INT NOT NULL,
  `formato` VARCHAR(45) NOT NULL,
  `idioma` VARCHAR(45) NOT NULL,
  `subtitulos` VARCHAR(45) NOT NULL,
  `peliculas_id_pelicula` INT NOT NULL,
  PRIMARY KEY (`id_tipo`, `peliculas_id_pelicula`),
  CONSTRAINT `fk_tipo_peliculas_peliculas1`
    FOREIGN KEY (`peliculas_id_pelicula`)
    REFERENCES `cinemar_v1`.`peliculas` (`id_pelicula`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_tipo_peliculas_peliculas1_idx` ON `cinemar_v1`.`tipo_peliculas` (`peliculas_id_pelicula` ASC) VISIBLE;

USE `cinemar_v1` ;

-- -----------------------------------------------------
-- Placeholder table for view `cinemar_v1`.`vista_reservas_1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`vista_reservas_1` (`id_reserva` INT, `fecha_reserva` INT, `id_usuario` INT, `username` INT, `id_funcion` INT, `fecha_funcion` INT, `salas_id_sala` INT, `peliculas_id_pelicula` INT, `nombre` INT, `cantidad` INT);

-- -----------------------------------------------------
-- Placeholder table for view `cinemar_v1`.`vista_salas_1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemar_v1`.`vista_salas_1` (`numero_de_sala` INT, `capacidad` INT, `formato_salas_id_formato` INT, `formato` INT, `descripcion` INT, `precio` INT);

-- -----------------------------------------------------
-- View `cinemar_v1`.`vista_reservas_1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinemar_v1`.`vista_reservas_1`;
USE `cinemar_v1`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `cinemar_v1`.`vista_reservas_1` AS select `cinemar_v1`.`reservas`.`id_reserva` AS `id_reserva`,`cinemar_v1`.`reservas`.`fecha` AS `fecha_reserva`,`cinemar_v1`.`usuarios`.`id_usuario` AS `id_usuario`,`cinemar_v1`.`usuarios`.`username` AS `username`,`cinemar_v1`.`funciones`.`id_funcion` AS `id_funcion`,`cinemar_v1`.`funciones`.`fecha` AS `fecha_funcion`,`cinemar_v1`.`funciones`.`salas_id_sala` AS `salas_id_sala`,`cinemar_v1`.`funciones`.`peliculas_id_pelicula` AS `peliculas_id_pelicula`,`cinemar_v1`.`peliculas`.`nombre` AS `nombre`,`cinemar_v1`.`reservas`.`cantidad` AS `cantidad` from ((((`cinemar_v1`.`reservas` join `cinemar_v1`.`usuarios`) join `cinemar_v1`.`funciones`) join `cinemar_v1`.`salas`) join `cinemar_v1`.`peliculas` on(((`cinemar_v1`.`reservas`.`usuarios_id_usuario` = `cinemar_v1`.`usuarios`.`id_usuario`) and (`cinemar_v1`.`reservas`.`funciones_id_funcion` = `cinemar_v1`.`funciones`.`id_funcion`) and (`cinemar_v1`.`reservas`.`funciones_salas_id_sala` = `cinemar_v1`.`salas`.`id_sala`) and (`cinemar_v1`.`reservas`.`funciones_peliculas_id_pelicula` = `cinemar_v1`.`peliculas`.`id_pelicula`))));

-- -----------------------------------------------------
-- View `cinemar_v1`.`vista_salas_1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cinemar_v1`.`vista_salas_1`;
USE `cinemar_v1`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `cinemar_v1`.`vista_salas_1` AS select `cinemar_v1`.`salas`.`id_sala` AS `numero_de_sala`,`cinemar_v1`.`salas`.`capacidad` AS `capacidad`,`cinemar_v1`.`salas_tienen_formato_salas`.`formato_salas_id_formato` AS `formato_salas_id_formato`,`cinemar_v1`.`formato_salas`.`identificador` AS `formato`,`cinemar_v1`.`formato_salas`.`descripcion` AS `descripcion`,`cinemar_v1`.`formato_salas`.`precio` AS `precio` from ((`cinemar_v1`.`salas` join `cinemar_v1`.`salas_tienen_formato_salas`) join `cinemar_v1`.`formato_salas` on(((`cinemar_v1`.`salas`.`id_sala` = `cinemar_v1`.`salas_tienen_formato_salas`.`salas_id_sala`) and (`cinemar_v1`.`salas_tienen_formato_salas`.`formato_salas_id_formato` = `cinemar_v1`.`formato_salas`.`id_formato`)))) order by `cinemar_v1`.`salas`.`id_sala`;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
